/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/assets/js/app.js":
/*!******************************!*\
  !*** ./src/assets/js/app.js ***!
  \******************************/
/***/ (function() {

eval("//  Change color header\r\n\r\nconst header = document.querySelector('#header');\r\n\r\nwindow.addEventListener('scroll', (event) => {\r\n\r\n\r\n    if(!header.classList.contains('header--black')) {\r\n        document.documentElement.scrollTop > 1 ? header.classList.add('header--black') : header.classList.remove('header--black');\r\n    }\r\n});\r\n\r\n\r\n//  Burger menu\r\n\r\nconst burgerBtn = document.querySelector('#navToggle'),\r\n      nav = document.querySelector('#nav'),\r\n      body = document.querySelector('body');\r\n\r\n\r\nburgerBtn.addEventListener('click', (event) => {\r\n    event.preventDefault();\r\n\r\n    burgerBtn.classList.toggle('active');\r\n    nav.classList.toggle('show');\r\n    body.classList.toggle('show-nav');\r\n\r\n});\r\n\r\n\r\n//  Smooth scroll\r\n\r\nlet deliverySection = document.querySelector('#delivery');\r\n    deliveryBtn = document.querySelector('[data-scroll]');\r\n\r\n    function handleButtonClick() {\r\n        deliverySection.scrollIntoView({\r\n            block: 'start', behavior: 'smooth'\r\n        });\r\n    }\r\n\r\n    if (deliveryBtn) {\r\n        deliveryBtn.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            handleButtonClick();\r\n            console.log(deliverySection, deliveryBtn);\r\n        });\r\n    }\r\n\r\n//  Gallery tabs\r\n\r\nlet mainPhoto = document.querySelectorAll('.product__gallery-header__photo'),\r\n    tabPhoto = document.querySelectorAll('.product__gallery-footer__photo');\r\n\r\nfunction hideTab() {\r\n    mainPhoto.forEach(item => {\r\n        item.classList.remove('fade');\r\n        item.classList.remove('show');\r\n        item.classList.add('hide');\r\n    });\r\n}\r\n\r\nfunction showTab(i) {\r\n    mainPhoto[i].classList.remove('hide');\r\n    mainPhoto[i].classList.add('show');\r\n    mainPhoto[i].classList.add('fade');\r\n}\r\n\r\ntabPhoto.forEach((item, i) => {\r\n    item.addEventListener('click', event => {\r\n        event.preventDefault();\r\n        hideTab();\r\n        showTab(i);\r\n    });\r\n});\r\n\r\n\r\n\r\n// Стилізація select.\r\n\r\nlet dropdownNav = document.querySelectorAll('.dropdown'),\r\n    choiceResult = 0, // Записуємо обране значення з форми select.\r\n    dropdownButton = document.querySelectorAll('.dropdown__button'),\r\n    dropdownList = document.querySelectorAll('.dropdown__list'),\r\n    dropdownItem = document.querySelectorAll('.dropdown__item');\r\n\r\n\r\nfunction hideDropDown(i) {\r\n    dropdownButton[i].classList.remove('active');\r\n    dropdownList[i].classList.remove('show');\r\n}\r\n\r\nfunction toggleDropDown(i) {\r\n    dropdownButton[i].classList.toggle('active');\r\n    dropdownList[i].classList.toggle('show');\r\n}\r\n\r\ndropdownList.forEach((item, i) => {\r\n    item.addEventListener('click', event => {\r\n        choiceResult = event.target.dataset.value;\r\n        dropdownButton[i].textContent = choiceResult;\r\n        hideDropDown(i);\r\n    });\r\n});\r\n\r\ndropdownButton.forEach((item, i) => {\r\n    item.addEventListener('click', event => {\r\n        toggleDropDown(i);\r\n    });\r\n});\r\n\r\ndocument.addEventListener('click', (event) => {\r\n    dropdownButton.forEach((item, i) => {\r\n        if (event.target !== item) {\r\n            hideDropDown(i);\r\n        }\r\n    });\r\n});\r\n\r\ndocument.addEventListener('keydown', (event) => {\r\n    if (event.key === 'Tab' || event.key === 'Escape') {\r\n        dropdownNav.forEach((item, i) => {\r\n            hideDropDown(i);\r\n        });\r\n    }\r\n});\r\n\r\n\r\n// Close cart item\r\n\r\nlet cart = document.getElementsByClassName('cart__item'),\r\n    test = document.querySelectorAll('[data-cart]'),\r\n    closeBtn = document.querySelectorAll('[data-close]'),\r\n    massage = document.querySelector('.massage'),\r\n    request = document.querySelector('.request');\r\n\r\n    \r\ncloseBtn.forEach((item, i) => {\r\n    item.addEventListener('click', event => {\r\n        test[i].remove();\r\n\r\n        if (0 == cart.length) {\r\n            massage.style.display = 'block';\r\n            request.style.display = 'none';\r\n        }\r\n    });\r\n});\r\n\r\n\r\n//  Forms validation\r\n\r\nlet form = document.querySelector('#form'),\r\n    userName = document.querySelector('#username'),\r\n    phone = document.querySelector('#phone'),\r\n    country = document.querySelector('#country'),\r\n    city = document.querySelector('#city'),\r\n    postIndex = document.querySelector('#post-index');\r\n\r\n\r\n\r\nconst setError = (element, massage) => {\r\n    const inputControl = element.parentElement;\r\n    const errorDisplay = inputControl.querySelector('.form__error');\r\n\r\n    errorDisplay.innerText = massage;\r\n    inputControl.classList.add('error'),\r\n    inputControl.classList.remove('success');\r\n};\r\n\r\n\r\nconst setSuccess = element => {\r\n    const inputControl = element.parentElement;\r\n    const errorDisplay = inputControl.querySelector('.form__error');\r\n\r\n    errorDisplay.innerText = '';\r\n    inputControl.classList.add('success');\r\n    inputControl.classList.remove('error');\r\n};\r\n\r\n\r\nconst isValidPhone = phone => {\r\n    const re = /^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/;\r\n    return re.test(String(phone));\r\n};\r\n\r\n\r\nconst isValidPostIndex = index => {\r\n    const re = /^\\d{5}(?:[-\\s]\\d{4})?$/;\r\n    return re.test(String(index));\r\n};\r\n\r\n\r\nconst isValidCity = city => {\r\n    const re = /^[a-zа-яё\\s]+$/iu;\r\n    return re.test(String(city));\r\n};\r\n\r\n\r\nconst isValidCountry = city => {\r\n    const re = /^[a-zа-яё\\s]+$/iu;\r\n    return re.test(String(city));\r\n};\r\n\r\n\r\nconst isValidUserName = username => {\r\n    const re = /^([а-яё\\s]+|[a-z\\s]+)$/iu;\r\n    return re.test(String(username));\r\n};\r\n\r\n\r\nconst validateInputs = () => {\r\n    const usernameValue = userName.value.trim(),\r\n          phoneValue = phone.value.trim(),\r\n          countryValue = country.value.trim(),\r\n          cityValue = city.value.trim(),\r\n          postIndexValue = postIndex.value.trim();\r\n\r\n    if (usernameValue === '') {\r\n        setError(userName, 'Укажите пожалуйста имя');\r\n    } else if (!isValidUserName(usernameValue)) {\r\n        setError(userName, 'Имя не может состоять из цифр и содержать буквы с разных языков ');\r\n    } else if (usernameValue.length < 4) {\r\n        setError(userName, 'ФИО должно иметь минимум четыре символа');\r\n    } else {\r\n        setSuccess(userName);\r\n    }\r\n    \r\n\r\n    if (phoneValue === '') {\r\n        setError(phone, 'Укажите пожалуйста мобильный телефон');\r\n    } else if (!isValidPhone(phoneValue)){\r\n        setError(phone, 'Укажите пожалуйста мобильный телефон в корректном формате');\r\n    } else {\r\n        setSuccess(phone);\r\n    }\r\n\r\n    if (countryValue === '') {\r\n        setError(country, 'Укажите пожалуйста страну');\r\n    } else if (!isValidCountry(countryValue)) {\r\n        setError(country, 'Название страны должно состоять только из букв');\r\n    } else if (countryValue.length < 2) {\r\n        setError(country, 'Название страны минимум из двух символов');\r\n    } else {\r\n        setSuccess(country);\r\n    }\r\n\r\n    if (cityValue === '') {\r\n        setError(city, 'Укажите пожалуйста город');\r\n    } else if (!isValidCity(cityValue)) {\r\n        setError(city, 'Название города должно состоять только из букв');\r\n    } else if (cityValue.length < 2){\r\n        setError(city, 'Название города должно состоять минумум из двух символов');\r\n    } else {\r\n        setSuccess(city);\r\n    }\r\n\r\n    if (postIndexValue === '') {\r\n        setError(postIndex, 'Укажите пожалуйста почтовый индекс');\r\n    } else if (!isValidPostIndex(postIndexValue)) {\r\n        setError(postIndex, 'Почтовый индекс должен состоять только из цифр в формате 55555, 55555-5555');\r\n    } else if (postIndexValue.length < 5 ) {\r\n        setError(postIndex, 'Почтовый индекс должен состоять минимум из 5 символов');\r\n    } else {\r\n        setSuccess(postIndex);\r\n    }\r\n};\r\n\r\nform.addEventListener('submit', event => {\r\n    event.preventDefault();\r\n\r\n    validateInputs();\r\n});\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://brainscloud/./src/assets/js/app.js?");

/***/ }),

/***/ "./src/assets/js/file2.js":
/*!********************************!*\
  !*** ./src/assets/js/file2.js ***!
  \********************************/
/***/ (function() {

eval("console.log('file 2');\r\n\n\n//# sourceURL=webpack://brainscloud/./src/assets/js/file2.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_modules__["./src/assets/js/app.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/assets/js/file2.js"]();
/******/ 	
/******/ })()
;